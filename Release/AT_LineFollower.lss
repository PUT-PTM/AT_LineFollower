
Release/AT_LineFollower.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  0000054c  000005e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000054c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000019  00800110  00800110  000005f0  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	ec e4       	ldi	r30, 0x4C	; 76
  48:	f5 e0       	ldi	r31, 0x05	; 5
  4a:	02 c0       	rjmp	.+4      	; 0x50 <.do_copy_data_start>

0000004c <.do_copy_data_loop>:
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0

00000050 <.do_copy_data_start>:
  50:	a0 31       	cpi	r26, 0x10	; 16
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <.do_copy_data_loop>

00000056 <__do_clear_bss>:
  56:	11 e0       	ldi	r17, 0x01	; 1
  58:	a0 e1       	ldi	r26, 0x10	; 16
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a9 32       	cpi	r26, 0x29	; 41
  62:	b1 07       	cpc	r27, r17
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	02 d0       	rcall	.+4      	; 0x6c <main>
  68:	6f c2       	rjmp	.+1246   	; 0x548 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <main>:
  6c:	09 d0       	rcall	.+18     	; 0x80 <MotorsInit>
  6e:	61 d1       	rcall	.+706    	; 0x332 <SensorsInit>
  70:	8c e0       	ldi	r24, 0x0C	; 12
  72:	ca d1       	rcall	.+916    	; 0x408 <USART_Init>
  74:	78 94       	sei
  76:	8a b1       	in	r24, 0x0a	; 10
  78:	8c 61       	ori	r24, 0x1C	; 28
  7a:	8a b9       	out	0x0a, r24	; 10
  7c:	fa d0       	rcall	.+500    	; 0x272 <lets_follow>
  7e:	fe cf       	rjmp	.-4      	; 0x7c <main+0x10>

00000080 <MotorsInit>:
  80:	18 b8       	out	0x08, r1	; 8
  82:	88 b1       	in	r24, 0x08	; 8
  84:	85 61       	ori	r24, 0x15	; 21
  86:	88 b9       	out	0x08, r24	; 8
  88:	84 b1       	in	r24, 0x04	; 4
  8a:	86 60       	ori	r24, 0x06	; 6
  8c:	84 b9       	out	0x04, r24	; 4
  8e:	e0 e8       	ldi	r30, 0x80	; 128
  90:	f0 e0       	ldi	r31, 0x00	; 0
  92:	80 81       	ld	r24, Z
  94:	80 68       	ori	r24, 0x80	; 128
  96:	80 83       	st	Z, r24
  98:	80 81       	ld	r24, Z
  9a:	80 62       	ori	r24, 0x20	; 32
  9c:	80 83       	st	Z, r24
  9e:	80 81       	ld	r24, Z
  a0:	81 60       	ori	r24, 0x01	; 1
  a2:	80 83       	st	Z, r24
  a4:	e1 e8       	ldi	r30, 0x81	; 129
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	88 60       	ori	r24, 0x08	; 8
  ac:	80 83       	st	Z, r24
  ae:	80 81       	ld	r24, Z
  b0:	81 60       	ori	r24, 0x01	; 1
  b2:	80 83       	st	Z, r24
  b4:	08 95       	ret

000000b6 <get_error>:
  b6:	0f 93       	push	r16
  b8:	1f 93       	push	r17
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
  be:	c6 e1       	ldi	r28, 0x16	; 22
  c0:	d1 e0       	ldi	r29, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	fe 01       	movw	r30, r28
  c8:	40 e0       	ldi	r20, 0x00	; 0
  ca:	50 e0       	ldi	r21, 0x00	; 0
  cc:	60 e0       	ldi	r22, 0x00	; 0
  ce:	70 e0       	ldi	r23, 0x00	; 0
  d0:	81 91       	ld	r24, Z+
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	2d 91       	ld	r18, X+
  d6:	3d 91       	ld	r19, X+
  d8:	89 01       	movw	r16, r18
  da:	80 9f       	mul	r24, r16
  dc:	90 01       	movw	r18, r0
  de:	81 9f       	mul	r24, r17
  e0:	30 0d       	add	r19, r0
  e2:	90 9f       	mul	r25, r16
  e4:	30 0d       	add	r19, r0
  e6:	11 24       	eor	r1, r1
  e8:	42 0f       	add	r20, r18
  ea:	53 1f       	adc	r21, r19
  ec:	68 0f       	add	r22, r24
  ee:	79 1f       	adc	r23, r25
  f0:	11 e0       	ldi	r17, 0x01	; 1
  f2:	ee 31       	cpi	r30, 0x1E	; 30
  f4:	f1 07       	cpc	r31, r17
  f6:	61 f7       	brne	.-40     	; 0xd0 <get_error+0x1a>
  f8:	61 15       	cp	r22, r1
  fa:	71 05       	cpc	r23, r1
  fc:	69 f4       	brne	.+26     	; 0x118 <get_error+0x62>
  fe:	10 92 15 01 	sts	0x0115, r1
 102:	10 92 14 01 	sts	0x0114, r1
 106:	80 91 27 01 	lds	r24, 0x0127
 10a:	90 91 28 01 	lds	r25, 0x0128
 10e:	2f ef       	ldi	r18, 0xFF	; 255
 110:	8c 3f       	cpi	r24, 0xFC	; 252
 112:	92 07       	cpc	r25, r18
 114:	64 f0       	brlt	.+24     	; 0x12e <get_error+0x78>
 116:	14 c0       	rjmp	.+40     	; 0x140 <get_error+0x8a>
 118:	10 92 15 01 	sts	0x0115, r1
 11c:	10 92 14 01 	sts	0x0114, r1
 120:	ca 01       	movw	r24, r20
 122:	bc d1       	rcall	.+888    	; 0x49c <__divmodhi4>
 124:	70 93 11 01 	sts	0x0111, r23
 128:	60 93 10 01 	sts	0x0110, r22
 12c:	1c c0       	rjmp	.+56     	; 0x166 <get_error+0xb0>
 12e:	88 ed       	ldi	r24, 0xD8	; 216
 130:	9f ef       	ldi	r25, 0xFF	; 255
 132:	90 93 11 01 	sts	0x0111, r25
 136:	80 93 10 01 	sts	0x0110, r24
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0a c0       	rjmp	.+20     	; 0x154 <get_error+0x9e>
 140:	05 97       	sbiw	r24, 0x05	; 5
 142:	6c f0       	brlt	.+26     	; 0x15e <get_error+0xa8>
 144:	88 e2       	ldi	r24, 0x28	; 40
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	90 93 11 01 	sts	0x0111, r25
 14c:	80 93 10 01 	sts	0x0110, r24
 150:	82 e0       	ldi	r24, 0x02	; 2
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	90 93 13 01 	sts	0x0113, r25
 158:	80 93 12 01 	sts	0x0112, r24
 15c:	04 c0       	rjmp	.+8      	; 0x166 <get_error+0xb0>
 15e:	10 92 11 01 	sts	0x0111, r1
 162:	10 92 10 01 	sts	0x0110, r1
 166:	20 91 12 01 	lds	r18, 0x0112
 16a:	30 91 13 01 	lds	r19, 0x0113
 16e:	21 30       	cpi	r18, 0x01	; 1
 170:	31 05       	cpc	r19, r1
 172:	39 f4       	brne	.+14     	; 0x182 <get_error+0xcc>
 174:	80 91 10 01 	lds	r24, 0x0110
 178:	90 91 11 01 	lds	r25, 0x0111
 17c:	18 16       	cp	r1, r24
 17e:	19 06       	cpc	r1, r25
 180:	4c f4       	brge	.+18     	; 0x194 <get_error+0xde>
 182:	22 30       	cpi	r18, 0x02	; 2
 184:	31 05       	cpc	r19, r1
 186:	51 f4       	brne	.+20     	; 0x19c <get_error+0xe6>
 188:	80 91 10 01 	lds	r24, 0x0110
 18c:	90 91 11 01 	lds	r25, 0x0111
 190:	97 fd       	sbrc	r25, 7
 192:	04 c0       	rjmp	.+8      	; 0x19c <get_error+0xe6>
 194:	10 92 13 01 	sts	0x0113, r1
 198:	10 92 12 01 	sts	0x0112, r1
 19c:	80 91 10 01 	lds	r24, 0x0110
 1a0:	90 91 11 01 	lds	r25, 0x0111
 1a4:	88 32       	cpi	r24, 0x28	; 40
 1a6:	91 05       	cpc	r25, r1
 1a8:	19 f4       	brne	.+6      	; 0x1b0 <get_error+0xfa>
 1aa:	5c 98       	cbi	0x0b, 4	; 11
 1ac:	5a 9a       	sbi	0x0b, 2	; 11
 1ae:	05 c0       	rjmp	.+10     	; 0x1ba <get_error+0x104>
 1b0:	88 5d       	subi	r24, 0xD8	; 216
 1b2:	9f 4f       	sbci	r25, 0xFF	; 255
 1b4:	21 f4       	brne	.+8      	; 0x1be <get_error+0x108>
 1b6:	5a 98       	cbi	0x0b, 2	; 11
 1b8:	5c 9a       	sbi	0x0b, 4	; 11
 1ba:	5b 9a       	sbi	0x0b, 3	; 11
 1bc:	03 c0       	rjmp	.+6      	; 0x1c4 <get_error+0x10e>
 1be:	5b 98       	cbi	0x0b, 3	; 11
 1c0:	5a 9a       	sbi	0x0b, 2	; 11
 1c2:	5c 9a       	sbi	0x0b, 4	; 11
 1c4:	19 92       	st	Y+, r1
 1c6:	11 e0       	ldi	r17, 0x01	; 1
 1c8:	ce 31       	cpi	r28, 0x1E	; 30
 1ca:	d1 07       	cpc	r29, r17
 1cc:	d9 f7       	brne	.-10     	; 0x1c4 <get_error+0x10e>
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	1f 91       	pop	r17
 1d4:	0f 91       	pop	r16
 1d6:	08 95       	ret

000001d8 <get_PD>:
 1d8:	40 91 10 01 	lds	r20, 0x0110
 1dc:	50 91 11 01 	lds	r21, 0x0111
 1e0:	80 91 27 01 	lds	r24, 0x0127
 1e4:	90 91 28 01 	lds	r25, 0x0128
 1e8:	41 15       	cp	r20, r1
 1ea:	51 05       	cpc	r21, r1
 1ec:	21 f0       	breq	.+8      	; 0x1f6 <get_PD+0x1e>
 1ee:	50 93 28 01 	sts	0x0128, r21
 1f2:	40 93 27 01 	sts	0x0127, r20
 1f6:	9a 01       	movw	r18, r20
 1f8:	28 1b       	sub	r18, r24
 1fa:	39 0b       	sbc	r19, r25
 1fc:	c9 01       	movw	r24, r18
 1fe:	74 e0       	ldi	r23, 0x04	; 4
 200:	22 0f       	add	r18, r18
 202:	33 1f       	adc	r19, r19
 204:	7a 95       	dec	r23
 206:	e1 f7       	brne	.-8      	; 0x200 <get_PD+0x28>
 208:	28 1b       	sub	r18, r24
 20a:	39 0b       	sbc	r19, r25
 20c:	ca 01       	movw	r24, r20
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	84 0f       	add	r24, r20
 218:	95 1f       	adc	r25, r21
 21a:	28 0f       	add	r18, r24
 21c:	39 1f       	adc	r19, r25
 21e:	c9 01       	movw	r24, r18
 220:	08 95       	ret

00000222 <read_sensors>:
 222:	ef 92       	push	r14
 224:	ff 92       	push	r15
 226:	0f 93       	push	r16
 228:	1f 93       	push	r17
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	0e e1       	ldi	r16, 0x1E	; 30
 230:	11 e0       	ldi	r17, 0x01	; 1
 232:	c1 e0       	ldi	r28, 0x01	; 1
 234:	d0 e0       	ldi	r29, 0x00	; 0
 236:	f8 e5       	ldi	r31, 0x58	; 88
 238:	ef 2e       	mov	r14, r31
 23a:	ef e4       	ldi	r30, 0x4F	; 79
 23c:	fe 2e       	mov	r15, r30
 23e:	8c 2f       	mov	r24, r28
 240:	d2 d0       	rcall	.+420    	; 0x3e6 <getSensorState>
 242:	fe 01       	movw	r30, r28
 244:	eb 5e       	subi	r30, 0xEB	; 235
 246:	fe 4f       	sbci	r31, 0xFE	; 254
 248:	80 83       	st	Z, r24
 24a:	88 23       	and	r24, r24
 24c:	19 f0       	breq	.+6      	; 0x254 <read_sensors+0x32>
 24e:	f8 01       	movw	r30, r16
 250:	f0 82       	st	Z, r15
 252:	02 c0       	rjmp	.+4      	; 0x258 <read_sensors+0x36>
 254:	f8 01       	movw	r30, r16
 256:	e0 82       	st	Z, r14
 258:	21 96       	adiw	r28, 0x01	; 1
 25a:	0f 5f       	subi	r16, 0xFF	; 255
 25c:	1f 4f       	sbci	r17, 0xFF	; 255
 25e:	c9 30       	cpi	r28, 0x09	; 9
 260:	d1 05       	cpc	r29, r1
 262:	69 f7       	brne	.-38     	; 0x23e <read_sensors+0x1c>
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	1f 91       	pop	r17
 26a:	0f 91       	pop	r16
 26c:	ff 90       	pop	r15
 26e:	ef 90       	pop	r14
 270:	08 95       	ret

00000272 <lets_follow>:
 272:	0f 93       	push	r16
 274:	1f 93       	push	r17
 276:	df 93       	push	r29
 278:	cf 93       	push	r28
 27a:	cd b7       	in	r28, 0x3d	; 61
 27c:	de b7       	in	r29, 0x3e	; 62
 27e:	64 97       	sbiw	r28, 0x14	; 20
 280:	0f b6       	in	r0, 0x3f	; 63
 282:	f8 94       	cli
 284:	de bf       	out	0x3e, r29	; 62
 286:	0f be       	out	0x3f, r0	; 63
 288:	cd bf       	out	0x3d, r28	; 61
 28a:	cb df       	rcall	.-106    	; 0x222 <read_sensors>
 28c:	14 df       	rcall	.-472    	; 0xb6 <get_error>
 28e:	a4 df       	rcall	.-184    	; 0x1d8 <get_PD>
 290:	ac 01       	movw	r20, r24
 292:	80 91 14 01 	lds	r24, 0x0114
 296:	90 91 15 01 	lds	r25, 0x0115
 29a:	89 2b       	or	r24, r25
 29c:	69 f5       	brne	.+90     	; 0x2f8 <lets_follow+0x86>
 29e:	57 ff       	sbrs	r21, 7
 2a0:	0f c0       	rjmp	.+30     	; 0x2c0 <lets_follow+0x4e>
 2a2:	8f ef       	ldi	r24, 0xFF	; 255
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	90 93 89 00 	sts	0x0089, r25
 2aa:	80 93 88 00 	sts	0x0088, r24
 2ae:	41 50       	subi	r20, 0x01	; 1
 2b0:	5f 4f       	sbci	r21, 0xFF	; 255
 2b2:	50 93 8b 00 	sts	0x008B, r21
 2b6:	40 93 8a 00 	sts	0x008A, r20
 2ba:	4f 5f       	subi	r20, 0xFF	; 255
 2bc:	50 40       	sbci	r21, 0x00	; 0
 2be:	24 c0       	rjmp	.+72     	; 0x308 <lets_follow+0x96>
 2c0:	41 15       	cp	r20, r1
 2c2:	51 05       	cpc	r21, r1
 2c4:	71 f0       	breq	.+28     	; 0x2e2 <lets_follow+0x70>
 2c6:	2f ef       	ldi	r18, 0xFF	; 255
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	c9 01       	movw	r24, r18
 2cc:	84 1b       	sub	r24, r20
 2ce:	95 0b       	sbc	r25, r21
 2d0:	90 93 89 00 	sts	0x0089, r25
 2d4:	80 93 88 00 	sts	0x0088, r24
 2d8:	30 93 8b 00 	sts	0x008B, r19
 2dc:	20 93 8a 00 	sts	0x008A, r18
 2e0:	13 c0       	rjmp	.+38     	; 0x308 <lets_follow+0x96>
 2e2:	8f ef       	ldi	r24, 0xFF	; 255
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	90 93 89 00 	sts	0x0089, r25
 2ea:	80 93 88 00 	sts	0x0088, r24
 2ee:	90 93 8b 00 	sts	0x008B, r25
 2f2:	80 93 8a 00 	sts	0x008A, r24
 2f6:	08 c0       	rjmp	.+16     	; 0x308 <lets_follow+0x96>
 2f8:	10 92 89 00 	sts	0x0089, r1
 2fc:	10 92 88 00 	sts	0x0088, r1
 300:	10 92 8b 00 	sts	0x008B, r1
 304:	10 92 8a 00 	sts	0x008A, r1
 308:	ca 01       	movw	r24, r20
 30a:	8e 01       	movw	r16, r28
 30c:	0f 5f       	subi	r16, 0xFF	; 255
 30e:	1f 4f       	sbci	r17, 0xFF	; 255
 310:	b8 01       	movw	r22, r16
 312:	4a e0       	ldi	r20, 0x0A	; 10
 314:	50 e0       	ldi	r21, 0x00	; 0
 316:	e9 d0       	rcall	.+466    	; 0x4ea <itoa>
 318:	c8 01       	movw	r24, r16
 31a:	a1 d0       	rcall	.+322    	; 0x45e <USART_SendStringNL>
 31c:	64 96       	adiw	r28, 0x14	; 20
 31e:	0f b6       	in	r0, 0x3f	; 63
 320:	f8 94       	cli
 322:	de bf       	out	0x3e, r29	; 62
 324:	0f be       	out	0x3f, r0	; 63
 326:	cd bf       	out	0x3d, r28	; 61
 328:	cf 91       	pop	r28
 32a:	df 91       	pop	r29
 32c:	1f 91       	pop	r17
 32e:	0f 91       	pop	r16
 330:	08 95       	ret

00000332 <SensorsInit>:
 332:	8a b1       	in	r24, 0x0a	; 10
 334:	8f 71       	andi	r24, 0x1F	; 31
 336:	8a b9       	out	0x0a, r24	; 10
 338:	8b b1       	in	r24, 0x0b	; 11
 33a:	80 6e       	ori	r24, 0xE0	; 224
 33c:	8b b9       	out	0x0b, r24	; 11
 33e:	84 b1       	in	r24, 0x04	; 4
 340:	8e 70       	andi	r24, 0x0E	; 14
 342:	84 b9       	out	0x04, r24	; 4
 344:	85 b1       	in	r24, 0x05	; 5
 346:	81 6f       	ori	r24, 0xF1	; 241
 348:	85 b9       	out	0x05, r24	; 5
 34a:	23 9a       	sbi	0x04, 3	; 4
 34c:	2b 9a       	sbi	0x05, 3	; 5
 34e:	08 95       	ret

00000350 <getSensorsState>:
 350:	ef 92       	push	r14
 352:	ff 92       	push	r15
 354:	0f 93       	push	r16
 356:	1f 93       	push	r17
 358:	e3 b0       	in	r14, 0x03	; 3
 35a:	23 b1       	in	r18, 0x03	; 3
 35c:	43 b1       	in	r20, 0x03	; 3
 35e:	63 b1       	in	r22, 0x03	; 3
 360:	e9 b1       	in	r30, 0x09	; 9
 362:	a9 b1       	in	r26, 0x09	; 9
 364:	09 b1       	in	r16, 0x09	; 9
 366:	83 b1       	in	r24, 0x03	; 3
 368:	30 e0       	ldi	r19, 0x00	; 0
 36a:	20 71       	andi	r18, 0x10	; 16
 36c:	30 70       	andi	r19, 0x00	; 0
 36e:	f3 e0       	ldi	r31, 0x03	; 3
 370:	35 95       	asr	r19
 372:	27 95       	ror	r18
 374:	fa 95       	dec	r31
 376:	e1 f7       	brne	.-8      	; 0x370 <getSensorsState+0x20>
 378:	50 e0       	ldi	r21, 0x00	; 0
 37a:	40 74       	andi	r20, 0x40	; 64
 37c:	50 70       	andi	r21, 0x00	; 0
 37e:	74 e0       	ldi	r23, 0x04	; 4
 380:	55 95       	asr	r21
 382:	47 95       	ror	r20
 384:	7a 95       	dec	r23
 386:	e1 f7       	brne	.-8      	; 0x380 <getSensorsState+0x30>
 388:	24 2b       	or	r18, r20
 38a:	87 95       	ror	r24
 38c:	88 27       	eor	r24, r24
 38e:	87 95       	ror	r24
 390:	82 2b       	or	r24, r18
 392:	70 e0       	ldi	r23, 0x00	; 0
 394:	60 78       	andi	r22, 0x80	; 128
 396:	70 70       	andi	r23, 0x00	; 0
 398:	54 e0       	ldi	r21, 0x04	; 4
 39a:	75 95       	asr	r23
 39c:	67 95       	ror	r22
 39e:	5a 95       	dec	r21
 3a0:	e1 f7       	brne	.-8      	; 0x39a <getSensorsState+0x4a>
 3a2:	86 2b       	or	r24, r22
 3a4:	f0 e0       	ldi	r31, 0x00	; 0
 3a6:	e0 72       	andi	r30, 0x20	; 32
 3a8:	f0 70       	andi	r31, 0x00	; 0
 3aa:	f5 95       	asr	r31
 3ac:	e7 95       	ror	r30
 3ae:	8e 2b       	or	r24, r30
 3b0:	b0 e0       	ldi	r27, 0x00	; 0
 3b2:	a0 74       	andi	r26, 0x40	; 64
 3b4:	b0 70       	andi	r27, 0x00	; 0
 3b6:	b5 95       	asr	r27
 3b8:	a7 95       	ror	r26
 3ba:	8a 2b       	or	r24, r26
 3bc:	10 e0       	ldi	r17, 0x00	; 0
 3be:	00 78       	andi	r16, 0x80	; 128
 3c0:	10 70       	andi	r17, 0x00	; 0
 3c2:	15 95       	asr	r17
 3c4:	07 95       	ror	r16
 3c6:	80 2b       	or	r24, r16
 3c8:	ff 24       	eor	r15, r15
 3ca:	90 e2       	ldi	r25, 0x20	; 32
 3cc:	e9 22       	and	r14, r25
 3ce:	ff 24       	eor	r15, r15
 3d0:	95 e0       	ldi	r25, 0x05	; 5
 3d2:	f5 94       	asr	r15
 3d4:	e7 94       	ror	r14
 3d6:	9a 95       	dec	r25
 3d8:	e1 f7       	brne	.-8      	; 0x3d2 <getSensorsState+0x82>
 3da:	8e 29       	or	r24, r14
 3dc:	1f 91       	pop	r17
 3de:	0f 91       	pop	r16
 3e0:	ff 90       	pop	r15
 3e2:	ef 90       	pop	r14
 3e4:	08 95       	ret

000003e6 <getSensorState>:
 3e6:	0f 93       	push	r16
 3e8:	1f 93       	push	r17
 3ea:	08 2f       	mov	r16, r24
 3ec:	b1 df       	rcall	.-158    	; 0x350 <getSensorsState>
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	10 e0       	ldi	r17, 0x00	; 0
 3f2:	01 50       	subi	r16, 0x01	; 1
 3f4:	10 40       	sbci	r17, 0x00	; 0
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <getSensorState+0x16>
 3f8:	95 95       	asr	r25
 3fa:	87 95       	ror	r24
 3fc:	0a 95       	dec	r16
 3fe:	e2 f7       	brpl	.-8      	; 0x3f8 <getSensorState+0x12>
 400:	81 70       	andi	r24, 0x01	; 1
 402:	1f 91       	pop	r17
 404:	0f 91       	pop	r16
 406:	08 95       	ret

00000408 <USART_Init>:
 408:	10 92 c5 00 	sts	0x00C5, r1
 40c:	80 93 c4 00 	sts	0x00C4, r24
 410:	88 e1       	ldi	r24, 0x18	; 24
 412:	80 93 c1 00 	sts	0x00C1, r24
 416:	8e e0       	ldi	r24, 0x0E	; 14
 418:	80 93 c2 00 	sts	0x00C2, r24
 41c:	08 95       	ret

0000041e <USART_SendChar>:
 41e:	98 2f       	mov	r25, r24
 420:	80 91 c0 00 	lds	r24, 0x00C0
 424:	85 ff       	sbrs	r24, 5
 426:	fc cf       	rjmp	.-8      	; 0x420 <USART_SendChar+0x2>
 428:	90 93 c6 00 	sts	0x00C6, r25
 42c:	08 95       	ret

0000042e <USART_Receive>:
 42e:	80 91 c0 00 	lds	r24, 0x00C0
 432:	87 ff       	sbrs	r24, 7
 434:	fc cf       	rjmp	.-8      	; 0x42e <USART_Receive>
 436:	80 91 c6 00 	lds	r24, 0x00C6
 43a:	08 95       	ret

0000043c <USART_SendString>:
 43c:	ac 01       	movw	r20, r24
 43e:	20 e0       	ldi	r18, 0x00	; 0
 440:	07 c0       	rjmp	.+14     	; 0x450 <USART_SendString+0x14>
 442:	80 91 c0 00 	lds	r24, 0x00C0
 446:	85 ff       	sbrs	r24, 5
 448:	fc cf       	rjmp	.-8      	; 0x442 <USART_SendString+0x6>
 44a:	e0 93 c6 00 	sts	0x00C6, r30
 44e:	2f 5f       	subi	r18, 0xFF	; 255
 450:	fa 01       	movw	r30, r20
 452:	e2 0f       	add	r30, r18
 454:	f1 1d       	adc	r31, r1
 456:	e0 81       	ld	r30, Z
 458:	ee 23       	and	r30, r30
 45a:	99 f7       	brne	.-26     	; 0x442 <USART_SendString+0x6>
 45c:	08 95       	ret

0000045e <USART_SendStringNL>:
 45e:	ac 01       	movw	r20, r24
 460:	20 e0       	ldi	r18, 0x00	; 0
 462:	07 c0       	rjmp	.+14     	; 0x472 <USART_SendStringNL+0x14>
 464:	80 91 c0 00 	lds	r24, 0x00C0
 468:	85 ff       	sbrs	r24, 5
 46a:	fc cf       	rjmp	.-8      	; 0x464 <USART_SendStringNL+0x6>
 46c:	e0 93 c6 00 	sts	0x00C6, r30
 470:	2f 5f       	subi	r18, 0xFF	; 255
 472:	fa 01       	movw	r30, r20
 474:	e2 0f       	add	r30, r18
 476:	f1 1d       	adc	r31, r1
 478:	e0 81       	ld	r30, Z
 47a:	ee 23       	and	r30, r30
 47c:	99 f7       	brne	.-26     	; 0x464 <USART_SendStringNL+0x6>
 47e:	80 91 c0 00 	lds	r24, 0x00C0
 482:	85 ff       	sbrs	r24, 5
 484:	fc cf       	rjmp	.-8      	; 0x47e <USART_SendStringNL+0x20>
 486:	8d e0       	ldi	r24, 0x0D	; 13
 488:	80 93 c6 00 	sts	0x00C6, r24
 48c:	80 91 c0 00 	lds	r24, 0x00C0
 490:	85 ff       	sbrs	r24, 5
 492:	fc cf       	rjmp	.-8      	; 0x48c <USART_SendStringNL+0x2e>
 494:	8a e0       	ldi	r24, 0x0A	; 10
 496:	80 93 c6 00 	sts	0x00C6, r24
 49a:	08 95       	ret

0000049c <__divmodhi4>:
 49c:	97 fb       	bst	r25, 7
 49e:	09 2e       	mov	r0, r25
 4a0:	07 26       	eor	r0, r23
 4a2:	0a d0       	rcall	.+20     	; 0x4b8 <__divmodhi4_neg1>
 4a4:	77 fd       	sbrc	r23, 7
 4a6:	04 d0       	rcall	.+8      	; 0x4b0 <__divmodhi4_neg2>
 4a8:	0c d0       	rcall	.+24     	; 0x4c2 <__udivmodhi4>
 4aa:	06 d0       	rcall	.+12     	; 0x4b8 <__divmodhi4_neg1>
 4ac:	00 20       	and	r0, r0
 4ae:	1a f4       	brpl	.+6      	; 0x4b6 <__divmodhi4_exit>

000004b0 <__divmodhi4_neg2>:
 4b0:	70 95       	com	r23
 4b2:	61 95       	neg	r22
 4b4:	7f 4f       	sbci	r23, 0xFF	; 255

000004b6 <__divmodhi4_exit>:
 4b6:	08 95       	ret

000004b8 <__divmodhi4_neg1>:
 4b8:	f6 f7       	brtc	.-4      	; 0x4b6 <__divmodhi4_exit>
 4ba:	90 95       	com	r25
 4bc:	81 95       	neg	r24
 4be:	9f 4f       	sbci	r25, 0xFF	; 255
 4c0:	08 95       	ret

000004c2 <__udivmodhi4>:
 4c2:	aa 1b       	sub	r26, r26
 4c4:	bb 1b       	sub	r27, r27
 4c6:	51 e1       	ldi	r21, 0x11	; 17
 4c8:	07 c0       	rjmp	.+14     	; 0x4d8 <__udivmodhi4_ep>

000004ca <__udivmodhi4_loop>:
 4ca:	aa 1f       	adc	r26, r26
 4cc:	bb 1f       	adc	r27, r27
 4ce:	a6 17       	cp	r26, r22
 4d0:	b7 07       	cpc	r27, r23
 4d2:	10 f0       	brcs	.+4      	; 0x4d8 <__udivmodhi4_ep>
 4d4:	a6 1b       	sub	r26, r22
 4d6:	b7 0b       	sbc	r27, r23

000004d8 <__udivmodhi4_ep>:
 4d8:	88 1f       	adc	r24, r24
 4da:	99 1f       	adc	r25, r25
 4dc:	5a 95       	dec	r21
 4de:	a9 f7       	brne	.-22     	; 0x4ca <__udivmodhi4_loop>
 4e0:	80 95       	com	r24
 4e2:	90 95       	com	r25
 4e4:	bc 01       	movw	r22, r24
 4e6:	cd 01       	movw	r24, r26
 4e8:	08 95       	ret

000004ea <itoa>:
 4ea:	fb 01       	movw	r30, r22
 4ec:	9f 01       	movw	r18, r30
 4ee:	e8 94       	clt
 4f0:	42 30       	cpi	r20, 0x02	; 2
 4f2:	bc f0       	brlt	.+46     	; 0x522 <__stack+0x23>
 4f4:	45 32       	cpi	r20, 0x25	; 37
 4f6:	ac f4       	brge	.+42     	; 0x522 <__stack+0x23>
 4f8:	4a 30       	cpi	r20, 0x0A	; 10
 4fa:	29 f4       	brne	.+10     	; 0x506 <__stack+0x7>
 4fc:	97 fb       	bst	r25, 7
 4fe:	1e f4       	brtc	.+6      	; 0x506 <__stack+0x7>
 500:	90 95       	com	r25
 502:	81 95       	neg	r24
 504:	9f 4f       	sbci	r25, 0xFF	; 255
 506:	64 2f       	mov	r22, r20
 508:	77 27       	eor	r23, r23
 50a:	db df       	rcall	.-74     	; 0x4c2 <__udivmodhi4>
 50c:	80 5d       	subi	r24, 0xD0	; 208
 50e:	8a 33       	cpi	r24, 0x3A	; 58
 510:	0c f0       	brlt	.+2      	; 0x514 <__stack+0x15>
 512:	89 5d       	subi	r24, 0xD9	; 217
 514:	81 93       	st	Z+, r24
 516:	cb 01       	movw	r24, r22
 518:	00 97       	sbiw	r24, 0x00	; 0
 51a:	a9 f7       	brne	.-22     	; 0x506 <__stack+0x7>
 51c:	16 f4       	brtc	.+4      	; 0x522 <__stack+0x23>
 51e:	5d e2       	ldi	r21, 0x2D	; 45
 520:	51 93       	st	Z+, r21
 522:	10 82       	st	Z, r1
 524:	c9 01       	movw	r24, r18
 526:	00 c0       	rjmp	.+0      	; 0x528 <strrev>

00000528 <strrev>:
 528:	dc 01       	movw	r26, r24
 52a:	fc 01       	movw	r30, r24
 52c:	67 2f       	mov	r22, r23
 52e:	71 91       	ld	r23, Z+
 530:	77 23       	and	r23, r23
 532:	e1 f7       	brne	.-8      	; 0x52c <strrev+0x4>
 534:	32 97       	sbiw	r30, 0x02	; 2
 536:	04 c0       	rjmp	.+8      	; 0x540 <strrev+0x18>
 538:	7c 91       	ld	r23, X
 53a:	6d 93       	st	X+, r22
 53c:	70 83       	st	Z, r23
 53e:	62 91       	ld	r22, -Z
 540:	ae 17       	cp	r26, r30
 542:	bf 07       	cpc	r27, r31
 544:	c8 f3       	brcs	.-14     	; 0x538 <strrev+0x10>
 546:	08 95       	ret

00000548 <_exit>:
 548:	f8 94       	cli

0000054a <__stop_program>:
 54a:	ff cf       	rjmp	.-2      	; 0x54a <__stop_program>
